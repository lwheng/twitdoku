<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_15) on Wed Nov 04 16:27:12 SGT 2009 -->
<TITLE>
MainController
</TITLE>

<META NAME="date" CONTENT="2009-11-04">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="MainController";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/MainController.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?sg/edu/nus/sudoku/controller/MainController.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="MainController.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
sg.edu.nus.sudoku.controller</FONT>
<BR>
Class MainController</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>sg.edu.nus.sudoku.controller.MainController</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>MainController</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Yipeng, Low Wee, Breton and Shawn</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#MainController()">MainController</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#blankMap()">blankMap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Displays an empty Sudoku board to the user for their Sudoku board input.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#checkBlankMap()">checkBlankMap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines if the currently filled up blank board has a unique solution.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#clearGame()">clearGame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clears all user input from the Sudoku board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#createFromString()">createFromString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Shows the dialogbox for users to paste an 81-character puzzle string to save and share.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#displayGui()">displayGui</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>displayGui()</tt> displays the GuiFrame</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#exitBlankMap()">exitBlankMap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prompts the user to save game and returns to main menu when they are using the blank board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#exitCurrentGame()">exitCurrentGame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prompts the user to save game and returns to main menu when they are playing the normal game.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#exitProgram()">exitProgram</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes saved games and hall of fame data to file and quits the program.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#hallOfFame()">hallOfFame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Shows user the hall of fame.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#initialize()">initialize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>initialize()</tt> is called when the programme is started.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#isCellGiven(int)">isCellGiven</A></B>(int&nbsp;cellId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <tt>true</tt> if value is a system provided value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#loadGame()">loadGame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Displays a dialog box prompting user to select a game to play.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#loadGameFromGameString(java.lang.String, java.lang.String)">loadGameFromGameString</A></B>(java.lang.String&nbsp;gameString,
                       java.lang.String&nbsp;gameStateString)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a game from a puzzle string and a puzzle-state string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#loadGameFromTweet(sg.edu.nus.sudoku.twitter.SudokuTweet)">loadGameFromTweet</A></B>(sg.edu.nus.sudoku.twitter.SudokuTweet&nbsp;tweet)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called by <CODE>WelcomePanel</CODE> to load games from tweets.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#loadSettings()">loadSettings</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called to load settings from the <CODE>Persistence</CODE> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#newGame()">newGame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called when user clicks the "New Game" button on the main menu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#refreshMainListing()">refreshMainListing</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Refreshes the main feed on the <tt>WelcomePanel</tt> asynchronously.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#resetGame()">resetGame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prompts user before clearing all user input from the Sudoku board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#returnToMainMenu()">returnToMainMenu</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;General method to set GUI to the main menu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#saveGame()">saveGame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Displays a dialog box with a text field so user can input the name of their save game.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#saveSettings()">saveSettings</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Called to save settings to the <CODE>Persistence</CODE> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#settings()">settings</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Displays settings panel.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#shareGame(java.lang.String)">shareGame</A></B>(java.lang.String&nbsp;identifier)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serializes game into a string before sharing it on Twitter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#showLoginUntilAuthenticated(java.awt.Component)">showLoginUntilAuthenticated</A></B>(java.awt.Component&nbsp;parentComponent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../sg/edu/nus/sudoku/controller/MainController.html#solveGame()">solveGame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Solves game and fills up the board.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="MainController()"><!-- --></A><H3>
MainController</H3>
<PRE>
public <B>MainController</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="initialize()"><!-- --></A><H3>
initialize</H3>
<PRE>
public void <B>initialize</B>()</PRE>
<DL>
<DD><tt>initialize()</tt> is called when the programme is started. This method
 shows the splash screen and loads up the rest of the GUI.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="displayGui()"><!-- --></A><H3>
displayGui</H3>
<PRE>
public void <B>displayGui</B>()</PRE>
<DL>
<DD><tt>displayGui()</tt> displays the GuiFrame
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="refreshMainListing()"><!-- --></A><H3>
refreshMainListing</H3>
<PRE>
public void <B>refreshMainListing</B>()</PRE>
<DL>
<DD>Refreshes the main feed on the <tt>WelcomePanel</tt> asynchronously.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="newGame()"><!-- --></A><H3>
newGame</H3>
<PRE>
public void <B>newGame</B>()</PRE>
<DL>
<DD>Called when user clicks the "New Game" button on the main menu.
 Shows the user a "Loading" screen, and proceeds to generate a puzzle.
 Once done, it displays the board to the user.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="hallOfFame()"><!-- --></A><H3>
hallOfFame</H3>
<PRE>
public void <B>hallOfFame</B>()</PRE>
<DL>
<DD>Shows user the hall of fame.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="loadGame()"><!-- --></A><H3>
loadGame</H3>
<PRE>
public void <B>loadGame</B>()</PRE>
<DL>
<DD>Displays a dialog box prompting user to select a game to play.
 Loads the game, and displays the game to the user.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="loadGameFromTweet(sg.edu.nus.sudoku.twitter.SudokuTweet)"><!-- --></A><H3>
loadGameFromTweet</H3>
<PRE>
public void <B>loadGameFromTweet</B>(sg.edu.nus.sudoku.twitter.SudokuTweet&nbsp;tweet)</PRE>
<DL>
<DD>Called by <CODE>WelcomePanel</CODE> to load games from tweets.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tweet</CODE> - </DL>
</DD>
</DL>
<HR>

<A NAME="loadGameFromGameString(java.lang.String, java.lang.String)"><!-- --></A><H3>
loadGameFromGameString</H3>
<PRE>
public void <B>loadGameFromGameString</B>(java.lang.String&nbsp;gameString,
                                   java.lang.String&nbsp;gameStateString)</PRE>
<DL>
<DD>Creates a game from a puzzle string and a puzzle-state string.
 If the puzzle-state string is null, game will be created as if it were "new" (Only clues, no user input).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>gameString</CODE> - <DD><CODE>gameStateString</CODE> - </DL>
</DD>
</DL>
<HR>

<A NAME="blankMap()"><!-- --></A><H3>
blankMap</H3>
<PRE>
public void <B>blankMap</B>()</PRE>
<DL>
<DD>Displays an empty Sudoku board to the user for their Sudoku board input.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="settings()"><!-- --></A><H3>
settings</H3>
<PRE>
public void <B>settings</B>()</PRE>
<DL>
<DD>Displays settings panel.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="exitProgram()"><!-- --></A><H3>
exitProgram</H3>
<PRE>
public void <B>exitProgram</B>()</PRE>
<DL>
<DD>Writes saved games and hall of fame data to file and quits the program.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="exitCurrentGame()"><!-- --></A><H3>
exitCurrentGame</H3>
<PRE>
public boolean <B>exitCurrentGame</B>()</PRE>
<DL>
<DD>Prompts the user to save game and returns to main menu when they are playing the normal game.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="exitBlankMap()"><!-- --></A><H3>
exitBlankMap</H3>
<PRE>
public void <B>exitBlankMap</B>()</PRE>
<DL>
<DD>Prompts the user to save game and returns to main menu when they are using the blank board.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="returnToMainMenu()"><!-- --></A><H3>
returnToMainMenu</H3>
<PRE>
public void <B>returnToMainMenu</B>()</PRE>
<DL>
<DD>General method to set GUI to the main menu.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="saveGame()"><!-- --></A><H3>
saveGame</H3>
<PRE>
public void <B>saveGame</B>()</PRE>
<DL>
<DD>Displays a dialog box with a text field so user can input the name of their save game.
 Prompts the user to key in a new name if a duplicate name is detected in one of the other saved games.
 Saves to the persistence object.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="shareGame(java.lang.String)"><!-- --></A><H3>
shareGame</H3>
<PRE>
public void <B>shareGame</B>(java.lang.String&nbsp;identifier)</PRE>
<DL>
<DD>Serializes game into a string before sharing it on Twitter.
 <b>To be implemented.</b>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>identifier</CODE> - </DL>
</DD>
</DL>
<HR>

<A NAME="showLoginUntilAuthenticated(java.awt.Component)"><!-- --></A><H3>
showLoginUntilAuthenticated</H3>
<PRE>
public boolean <B>showLoginUntilAuthenticated</B>(java.awt.Component&nbsp;parentComponent)</PRE>
<DL>
<DD><DL>

<DT><B>Returns:</B><DD>false means the user clicked cancel.</DL>
</DD>
</DL>
<HR>

<A NAME="solveGame()"><!-- --></A><H3>
solveGame</H3>
<PRE>
public void <B>solveGame</B>()</PRE>
<DL>
<DD>Solves game and fills up the board. Displays user the filled up board and disables the Cells.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="checkBlankMap()"><!-- --></A><H3>
checkBlankMap</H3>
<PRE>
public void <B>checkBlankMap</B>()</PRE>
<DL>
<DD>Determines if the currently filled up blank board has a unique solution.
 
 Method displays a loading page, and attempts to solve the user-specified Sudoku.
 If it fails, an error message is shown, and the user is able to continue creating his/her Sudoku.
 If there is a unique solution, the game is saved for the user to be able to play at a later time.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="clearGame()"><!-- --></A><H3>
clearGame</H3>
<PRE>
public void <B>clearGame</B>()</PRE>
<DL>
<DD>Clears all user input from the Sudoku board.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="resetGame()"><!-- --></A><H3>
resetGame</H3>
<PRE>
public void <B>resetGame</B>()</PRE>
<DL>
<DD>Prompts user before clearing all user input from the Sudoku board.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="createFromString()"><!-- --></A><H3>
createFromString</H3>
<PRE>
public void <B>createFromString</B>()</PRE>
<DL>
<DD>Shows the dialogbox for users to paste an 81-character puzzle string to save and share.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isCellGiven(int)"><!-- --></A><H3>
isCellGiven</H3>
<PRE>
public boolean <B>isCellGiven</B>(int&nbsp;cellId)</PRE>
<DL>
<DD>Returns <tt>true</tt> if value is a system provided value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>cellId</CODE> - Cell ID
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="saveSettings()"><!-- --></A><H3>
saveSettings</H3>
<PRE>
public void <B>saveSettings</B>()</PRE>
<DL>
<DD>Called to save settings to the <CODE>Persistence</CODE> object.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="loadSettings()"><!-- --></A><H3>
loadSettings</H3>
<PRE>
public void <B>loadSettings</B>()</PRE>
<DL>
<DD>Called to load settings from the <CODE>Persistence</CODE> object.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/MainController.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?sg/edu/nus/sudoku/controller/MainController.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="MainController.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
